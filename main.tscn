extends Node2D

const PLAYER_SPEED = 300
const BLOCK_SPEED = 200
const SPAWN_INTERVAL = 1.0
const BLOCK_SIZE = Vector2(40, 40)

var player
var blocks = []
var time_since_last_spawn = 0.0
var game_over = false

func _ready():
    # Create player
    player = ColorRect.new()
    player.color = Color.BLUE
    player.size = Vector2(50, 50)
    player.position = Vector2(get_viewport_rect().size.x / 2 - 25, get_viewport_rect().size.y - 70)
    add_child(player)

func _process(delta):
    if game_over:
        return

    handle_player_input(delta)
    handle_blocks(delta)
    spawn_blocks(delta)

func handle_player_input(delta):
    var dir = 0
    if Input.is_action_pressed("ui_left"):
        dir -= 1
    if Input.is_action_pressed("ui_right"):
        dir += 1
    player.position.x += dir * PLAYER_SPEED * delta
    player.position.x = clamp(player.position.x, 0, get_viewport_rect().size.x - player.size.x)

func spawn_blocks(delta):
    time_since_last_spawn += delta
    if time_since_last_spawn >= SPAWN_INTERVAL:
        time_since_last_spawn = 0.0
        var block = ColorRect.new()
        block.color = Color.RED
        block.size = BLOCK_SIZE
        block.position = Vector2(randi() % int(get_viewport_rect().size.x - BLOCK_SIZE.x), -BLOCK_SIZE.y)
        add_child(block)
        blocks.append(block)

func handle_blocks(delta):
    for block in blocks:
        block.position.y += BLOCK_SPEED * delta
        if block.get_rect().intersects(player.get_rect()):
            game_over = true
            show_game_over()
        elif block.position.y > get_viewport_rect().size.y:
            block.queue_free()
            blocks.erase(block)

func show_game_over():
    var label = Label.new()
    label.text = "GAME OVER"
    label.position = get_viewport_rect().size / 2 - Vector2(80, 20)
    label.scale = Vector2(2, 2)
    add_child(label)
